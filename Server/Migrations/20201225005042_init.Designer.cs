// <auto-generated />
using System;
using LearnBlazor.Server.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LearnBlazor.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201225005042_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.ChatGroup", b =>
                {
                    b.Property<long>("ChatGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ChatGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChatGroupId");

                    b.ToTable("ChatGroups");

                    b.HasData(
                        new
                        {
                            ChatGroupId = 1L,
                            ChatGroupName = "All Chat",
                            Uuid = new Guid("68a67d1d-ed19-4271-9792-c1e7277c5c92")
                        },
                        new
                        {
                            ChatGroupId = 2L,
                            ChatGroupName = "second chat group",
                            Uuid = new Guid("f002e119-c38c-4207-9bed-f925d290bcd1")
                        },
                        new
                        {
                            ChatGroupId = 3L,
                            ChatGroupName = "third chat group",
                            Uuid = new Guid("e4af9702-30e5-4d2e-acb7-9a3344c9749a")
                        });
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.ChatGroupUser", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChatGroupId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ChatGroupId");

                    b.HasIndex("ChatGroupId");

                    b.ToTable("ChatGroupUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            ChatGroupId = 1L,
                            Uuid = new Guid("f0fffe13-9e34-4ec6-bf84-7a65698749c9")
                        },
                        new
                        {
                            UserId = 1L,
                            ChatGroupId = 2L,
                            Uuid = new Guid("7c825425-cae5-4560-9569-2d1577532aaf")
                        },
                        new
                        {
                            UserId = 1L,
                            ChatGroupId = 3L,
                            Uuid = new Guid("2414b5ca-03bb-411a-a898-6fedbe345dab")
                        },
                        new
                        {
                            UserId = 2L,
                            ChatGroupId = 1L,
                            Uuid = new Guid("d53d1525-de64-43f0-b07e-a1d195b77f7c")
                        },
                        new
                        {
                            UserId = 2L,
                            ChatGroupId = 2L,
                            Uuid = new Guid("fac28d0f-a990-4c88-9b2b-92f51143cb98")
                        },
                        new
                        {
                            UserId = 3L,
                            ChatGroupId = 1L,
                            Uuid = new Guid("18634c88-c971-449a-8074-d702eb1c1f85")
                        });
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.ChatMessage", b =>
                {
                    b.Property<long>("ChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ChatGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChatMessageId");

                    b.HasIndex("ChatGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages");

                    b.HasData(
                        new
                        {
                            ChatMessageId = 1L,
                            ChatGroupId = 1L,
                            Message = "first message",
                            UserId = 1L,
                            Uuid = new Guid("c86b6173-9f1d-4550-a5cf-e0f56e56d2cb")
                        },
                        new
                        {
                            ChatMessageId = 2L,
                            ChatGroupId = 2L,
                            Message = "second message",
                            UserId = 2L,
                            Uuid = new Guid("e3d03677-1c17-4d9c-9146-db01580d7b8c")
                        });
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Name = "Anonymous",
                            Uuid = new Guid("1e263f3e-3cc0-41c3-88dc-94f334bd8fe9")
                        },
                        new
                        {
                            UserId = 2L,
                            Name = "Bob",
                            Uuid = new Guid("dfd6101d-3aa8-402e-bb72-469a8aecd09c")
                        },
                        new
                        {
                            UserId = 3L,
                            Name = "Carson",
                            Uuid = new Guid("b6148ca4-201e-4ee8-aa82-bf624abd7f6c")
                        });
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.ChatGroupUser", b =>
                {
                    b.HasOne("LearnBlazor.Server.Data.Models.ChatGroup", "ChatGroup")
                        .WithMany("ChatGroupUsers")
                        .HasForeignKey("ChatGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnBlazor.Server.Data.Models.User", "User")
                        .WithMany("ChatGroupUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.ChatMessage", b =>
                {
                    b.HasOne("LearnBlazor.Server.Data.Models.ChatGroup", "ChatGroup")
                        .WithMany("Messages")
                        .HasForeignKey("ChatGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnBlazor.Server.Data.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.ChatGroup", b =>
                {
                    b.Navigation("ChatGroupUsers");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("LearnBlazor.Server.Data.Models.User", b =>
                {
                    b.Navigation("ChatGroupUsers");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
